# Пользователь с правами которого работает nginx
user  nginx;

# Рекомендуется устанавливать по числу ядер
worker_processes  2;

#log фаил
error_log /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

# Максимальное число подключений к серверу на один worker-процесс
events {
	worker_connections  2048;
	# Эффективный метод обработки соединений, используемый в Linux 2.6+
	use epoll;
}

http {

# Базовые настройки
#Организовываем кеш для FastCGI сервера, я использую раздел в ram
	fastcgi_cache_path /tmp/fcgi-cache/ levels=1:2   keys_zone=one:10m;
  
map $http_user_agent $limit_bots {
         default '';
         ~*(google|bing|yandex|msnbot) $binary_remote_addr;
}

#Мы ограничим число запросов до 4 в секунду с одного IP
#limit_req_zone $limit_bots zone=bots:10m rate=1r/m;
#limit_req_zone  $binary_remote_addr  zone=default:10m   rate=1r/s;
#limit_req_zone  $binary_remote_addr  zone=freeadmin_kiev_ua:10m   rate=1r/s;
	
	#access_log /var/log/nginx/access.log;
	access_log  /dev/null ;

	include /etc/nginx/mime.types;
	default_type  application/octet-stream;

#Используем sendfile, но осторожно, если надо отдавать большие файлы, 
#то sendfile случается вредит    
	sendfile        on;
#Ограничиваем размер сегмента отправляемой за одну
#блокируемую отдачу
	sendfile_max_chunk  128k;
#Буфер отдачи которы используется для обрабатываемых данных
	postpone_output  1460;
#Размер хеша для доменных имен.
	server_names_hash_bucket_size 64;
#Размер данных принемаемых post запросом
	client_max_body_size 15m;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
# При ошибках не говорим врагу версию nginx
	server_tokens off;

# Настройки сжатия
  gzip  on;
  gzip_proxied expired no-cache no-store private auth;
  gzip_min_length 1100;
  gzip_http_version 1.1;
  gzip_buffers 16 8k;
  gzip_comp_level 3;
  gzip_types text/plain text/css application/x-javascript text/javascript text/x
  application/xml+rss application/xhtml+xml;


   include /etc/nginx/sites-enabled/*;
}
